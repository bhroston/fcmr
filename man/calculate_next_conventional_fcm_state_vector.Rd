% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-infer_and_simulate_fcm.R
\name{calculate_next_conventional_fcm_state_vector}
\alias{calculate_next_conventional_fcm_state_vector}
\title{Calculate Next (Conventional) FCM State
Vector}
\usage{
calculate_next_conventional_fcm_state_vector(
  adj_matrix = matrix(),
  state_vector = c(),
  activation = c("kosko", "modified-kosko", "rescale")
)
}
\arguments{
\item{adj_matrix}{An n x n adjacency matrix that represents an FCM}

\item{state_vector}{A list state values at a particular iteration in an fcm simulation}

\item{activation}{The activation function to be applied. Must be one of the following:
'kosko', 'modified-kosko', or 'rescale'.}
}
\value{
The (i + 1) iteration of the input state_vector based on the
adj_matrix and activation function
}
\description{
This calculates the next iteration of a state vector in an fcm simulation
based on the kosko, modified-kosko, or rescale activation functions
}
\details{
INTENDED FOR DEVELOPER USE ONLY

The state of the art of fcm typically applies one of three activation functions
in calculating iterative state vector values: kosko, modified-kosko, and
rescale (as identified in Gonzales et al. 2018 - https://doi.org/10.1142/S0218213018600102).

kosko: Only considers the current iteration (Kosko, 1986 - https://doi.org/10.1016/S0020-7373(86)80040-2)

modified-kosko: The previous value of a node influences its future value (Stylio & Groumpos, 2004 - https://doi.org/10.1109/TSMCA.2003.818878)

rescale: Like modified-kosko, but assigns nodes with no value with a
value of 0.5 to reduce the influence that a lack of initial state information
can have on the simulation output (rescale, 2011 - https://doi.org/10.1016/j.asoc.2009.12.010)=

Use vignette("fcm-class") for more information.
}
\examples{
NULL
}
\references{
Kosko, 1986
}
\keyword{internal}
