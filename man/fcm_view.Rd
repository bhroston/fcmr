% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-general.R
\name{fcm_view}
\alias{fcm_view}
\title{Display FCM in Viewer}
\usage{
fcm_view(
  fcm_adj_matrix = matrix(),
  fcm_visNetwork = list(),
  shiny = FALSE,
  ...
)
}
\arguments{
\item{fcm_adj_matrix}{An adjacency matrix representing an FCM. fcm_view
accepts either an fcm_adj_matrix or fcm_visNetwork input but NOT both.}

\item{fcm_visNetwork}{An fcm_view visNetwork object output. fcm_view accepts
either an fcm_adj_matrix or fcm_visNetwork input but NOT both.}

\item{shiny}{View visNetwork output in a shiny app instead of the viewer
pane. This adds the functionality to store node locations after moving them.}

\item{...}{For advanced use. Set alert_on_open = FALSE to remove alert
pop-up describing how to save visNetwork output from shiny app.}
}
\value{
A display of the input FCM in the Viewer pane; if shiny = TRUE,
the visNetwork object saved into the global environment as
fcm_view_visNetwork
}
\description{
Display an FCM in the Viewer pane as an interactive visNetwork object. Use
the shiny parameter to interact with the FCM visNetwork object and
store its output in the global environment via the view_fcm_visNetwork
variable.
}
\examples{

adj_matrix <- sample_fcms$simple_fcms$conventional_fcms[[1]]
fcm_view(fcm_adj_matrix = adj_matrix)

adj_matrix <- sample_fcms$simple_fcms$ivfn_fcms[[1]]
fcm_view(fcm_adj_matrix = adj_matrix)

adj_matrix <- sample_fcms$simple_fcms$tfn_fcms[[1]]
fcm_view(fcm_adj_matrix = adj_matrix)

}
\seealso{
Other utility: 
\code{\link{check_if_local_machine_has_access_to_parallel_processing_functionalities}()},
\code{\link{check_if_local_machine_has_access_to_show_progress_functionalities}()},
\code{\link{get_adj_matrices_input_type}()},
\code{\link{get_edgelist_from_adj_matrix}()},
\code{\link{get_inferences}()},
\code{\link{get_node_IDs_from_input}()},
\code{\link{standardize_adj_matrices}()}
}
\concept{utility}
