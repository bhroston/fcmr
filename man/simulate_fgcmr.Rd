% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fgcmr.R
\name{simulate_fgcmr}
\alias{simulate_fgcmr}
\title{simulate_fcmr}
\usage{
simulate_fgcmr(
  grey_adj_matrix = matrix(),
  initial_state_vector = c(),
  activation = "modified-kosko",
  squashing = "sigmoid",
  lambda = 1,
  max_iter = 10,
  min_error = 1e-05,
  IDs = c()
)
}
\arguments{
\item{grey_adj_matrix}{An n x n grey_adjacency matrix that represents an FCM}

\item{initial_state_vector}{A list state values at the start of an fcm simulation}

\item{activation}{The activation function to be applied. Must be one of the following:
'kosko', 'modified-kosko', or 'papageorgiou'.}

\item{squashing}{A squashing function to apply. Must be one of the following:
'bivalent', 'saturation', 'trivalent', 'tanh', or 'sigmoid'.}

\item{lambda}{A numeric value that defines the steepness of the slope of the
squashing function when tanh or sigmoid are applied}

\item{max_iter}{The maximum number of iterations to run if the minimum error value is not achieved}

\item{min_error}{The lowest error (sum of the absolute value of the current state
vector minus the previous state vector) at which no more iterations are necessary
and the simulation will stop}

\item{IDs}{A list of names for each node (must have n items). If empty, will use
column names of adjacancy matrix (if given).}
}
\description{
This calculates a sequence of iterations of a simulation over an fgcmr object
given an initial state vector along with the activation, squashing, and lambda
parameters. Additional variables may be defined to control simulation length,
column names, and lambda optimization.
}
\details{
This simulates how an fgcm reacts to an input initial state vector. There is a
multi-decadal long body of work that has explored numerous activation and squashing
functions as well as algorithms to optimize the lambda value for the
sigmoid and tanh squashing functions.

Use vignette("fgcmr-class") for more information about each of these
functions/algorithms alongside their originating sources.
}
