% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcmconfr.R
\name{fcmconfr}
\alias{fcmconfr}
\title{fcmconfr}
\usage{
fcmconfr(
  adj_matrix_list = list(matrix()),
  samples = 1000,
  include_zeroes_in_aggregation = TRUE,
  aggregation_fun = c("mean", "median"),
  initial_state_vector = c(),
  clamping_vector = c(),
  activation = c("kosko", "modified-kosko", "rescale"),
  squashing = c("sigmoid", "tanh"),
  lambda = 1,
  max_iter = 100,
  min_error = 1e-05,
  bootstrap_inference_means = TRUE,
  bootstrap_CI = 0.95,
  bootstrap_reps = 5000,
  bootstrap_draws_per_rep = 5000,
  show_progress = TRUE,
  parallel = TRUE,
  n_cores = integer(),
  IDs = c(),
  include_simulations_in_output = FALSE
)
}
\arguments{
\item{adj_matrix_list}{A list of n x n adjacencey matrices representing fcms, fgcms, or ftcms.}

\item{samples}{The number of samples to draw with the selected sampling method. Also,
the number of sampled models to generate}

\item{include_zeroes_in_aggregation}{TRUE/FALSE Whether to incorporate zeroes as intentionally-defined
edge weights or ignore them in aggregation}

\item{aggregation_fun}{The aggregation function, either mean or median}

\item{initial_state_vector}{A list state values at the start of an fcm simulation}

\item{clamping_vector}{A list of values representing specific actions taken to
control the behavior of an FCM. Specifically, non-zero values defined in this vector
will remain constant throughout the entire simulation as if they were "clamped" at those values.}

\item{activation}{The activation function to be applied. Must be one of the following:
'kosko', 'modified-kosko', or 'papageorgiou'.}

\item{squashing}{A squashing function to apply. Must be one of the following:
'bivalent', 'saturation', 'trivalent', 'tanh', or 'sigmoid'.}

\item{lambda}{A numeric value that defines the steepness of the slope of the
squashing function when tanh or sigmoid are applied}

\item{max_iter}{The maximum number of iterations to run if the minimum error value is not achieved}

\item{min_error}{The lowest error (sum of the absolute value of the current state
vector minus the previous state vector) at which no more iterations are necessary
and the simulation will stop}

\item{bootstrap_inference_means}{TRUE/FALSE Whether to estimate a CI about the mean
inferences}

\item{bootstrap_CI}{What are of the distribution should be bounded by the
confidence intervals? (e.g. 0.95)}

\item{bootstrap_reps}{Repetitions for bootstrap process, if chosen}

\item{bootstrap_draws_per_rep}{Number of samples to draw (with replacement) from
the data per bootstrap_rep}

\item{show_progress}{TRUE/FALSE Show progress bar when creating fmcm. Uses pbmapply
from the pbapply package as the underlying function.}

\item{parallel}{TRUE/FALSE Whether to utilize parallel processing}

\item{n_cores}{Number of cores to use in parallel processing. If no input given,
will use all available cores in the machine.}

\item{IDs}{A list of names for each node (must have n items). If empty, will use
column names of adjacancy matrix (if given).}

\item{include_simulations_in_output}{TRUE/FALSE whether to include simulations of monte-carlo-generated
FCM. Will dramatically increase size of output if TRUE.}
}
\description{
[ADD DETAILS HERE!!!]
}
\details{
[ADD DETAILS HERE!!!]

Use vignette("fmcm-class") for more information.
}
