% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_fcms.R
\name{aggregate_fcms}
\alias{aggregate_fcms}
\title{Aggregate FCMs}
\usage{
aggregate_fcms(
  adj_matrices = list(matrix()),
  aggregation_function = c("mean", "median"),
  include_zeroes = FALSE
)
}
\arguments{
\item{adj_matrices}{A list of adj. matrix objects; these can represent
conventional FCM, IVFN FCM, and TFN FCM, but all adj. matrices must be of
the same type between the three options.}

\item{aggregation_function}{Calculate aggregate edge weights as either the
"mean" or "median" of the input edge weights across inputs}

\item{include_zeroes}{TRUE/FALSE Whether to include zeroes in the mean/median
calculations. (i.e. if edges not included in a map should count as a zero-weighted
edge or not at all)}
}
\value{
An aggregate adj. matrix (of class 'aggregate') with edges represented
as the same data types as the inputs (i.e. Numerics for conventional, IVFNs, or TFNs)
}
\description{
Generate an aggregate adj. matrix from a list of adj. matrices. FCM
aggregation works by calculating the mean/median edge weight for all edges
across the input adj. matrices (i.e. the mean/median of the edge weight
connecting A -> B across all maps, the mean/median of the edge weight
connecting B -> C across all maps, and so on). The user may dictate whether
to incorporate 0-valued edge weights in the mean/median calculations.
}
\details{
All input adj. matrices must have the same dimensions and concept names to
generate an aggregate.
}
\examples{
# Aggregate Conventional FCMs
adj_matrix_1 <- data.frame(
  "A" = c(0, 0.8),
  "B" = c(1, 0)
)
adj_matrix_2 <- data.frame(
  "A" = c(0, 0.4),
  "B" = c(0.25, 0)
)
adj_matrix_3 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.75, 0)
)
adj_matrix_4 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.5, 0)
)
fcms <- list(adj_matrix_1, adj_matrix_2, adj_matrix_3, adj_matrix_4)
aggregate_fcms(fcms, "mean", include_zeroes = TRUE)


# Aggregate IVFN FCMs
lower_adj_matrix_1 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.4, 0)
)
upper_adj_matrix_1 <- data.frame(
  "A" = c(0, 0.2),
  "B" = c(0.6, 0)
)
adj_matrix_1 <- make_adj_matrix_w_ivfns(lower_adj_matrix_1, upper_adj_matrix_1)
lower_adj_matrix_2 <- data.frame(
  "A" = c(0, 0.3),
  "B" = c(0.6, 0)
)
upper_adj_matrix_2 <- data.frame(
  "A" = c(0, 0.4),
  "B" = c(1, 0)
)
adj_matrix_2 <- make_adj_matrix_w_ivfns(lower_adj_matrix_2, upper_adj_matrix_2)
lower_adj_matrix_3 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.2, 0)
)
upper_adj_matrix_3 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.6, 0)
)
adj_matrix_3 <- make_adj_matrix_w_ivfns(lower_adj_matrix_3, upper_adj_matrix_3)
lower_adj_matrix_4 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.0, 0)
)
upper_adj_matrix_4 <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.4, 0)
)
adj_matrix_4 <- make_adj_matrix_w_ivfns(lower_adj_matrix_4, upper_adj_matrix_4)

fcms_w_ivfns <- list(adj_matrix_1, adj_matrix_2, adj_matrix_3, adj_matrix_4)

# NOTE: If the lower bound of an edge weight is 0, but the upper bound is > 0,
# the assumption that a stakeholder simply did not include the edge is invalid.
# Thus, since the 0-lower bound is meaningful, it is included in mean/median
# calculations even if include_zeroes = FALSE
aggregate_fcms(fcms_w_ivfns, "mean", include_zeroes = FALSE)
}
