% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fcm.R
\name{optimize_fcm_lambda}
\alias{optimize_fcm_lambda}
\title{optimize_fcm_lambda}
\usage{
optimize_fcm_lambda(
  adj_matrix = matrix(),
  squashing = "sigmoid",
  method = "koutsellis"
)
}
\arguments{
\item{adj_matrix}{An n x n adjacency matrix that represents an FCM}

\item{squashing}{A squashing function to apply. Must be one of the following: 'tanh', or 'sigmoid'.}

\item{method}{An algorithm of which to optimize lambda with. Must be one of the following: "koutsellis" or 'none'
if the user does not want to optimize lambda and use the user-defined lambda instead.

koutsellis: This algorithm was first explored in Kottas et al. 2010 (https://doi.org/10.1007/978-3-642-03220-2_5),
expanded upon in Koutsellis et al. 2022 (https://doi.org/10.1007/s12351-022-00717-x), and
further further developed in Koutsellis et al. 2022 (https://doi.org/10.1109/IISA56318.2022.9904369).

It estimates lambda such that the 'squashed' values will be contained within
the near-linear region of the sigmoid or tanh function, and then re-normalizes
those values back to the total possibility spaces of those functions ([0, 1]
and [-1, 1] respectively).}
}
\description{
This calculates optimum lambda value for the sigmoid and tanh squashing
function that guarantees convergence of the simulation
}
\details{
This applies an algorithm to optimize lambda. Currently, the author only
identifies one such algorithm, but generalizes the function to leave flexibility
for the addition of newly-discovered algorithms in the future.
}
