% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IVFNs_and_TFNs.R
\name{make_adj_matrix_w_ivfns}
\alias{make_adj_matrix_w_ivfns}
\title{Create Adj. Matrix w/ Edges Represented as IVFNs}
\usage{
make_adj_matrix_w_ivfns(lower = matrix(), upper = matrix())
}
\arguments{
\item{lower}{An n x n adjacency matrix that represents the lower limits of
edges in an FCM}

\item{upper}{An n x n adjacency matrix that represents the upper limits of
edges in an FCM}
}
\value{
An adj. matrix (of class 'ivfn') with edges represented as IVFNs
}
\description{
This constructs an adjacency matrix with edges represented by interval-value
fuzzy numbers (IVFNs) from an adjacency matrix of lower bounds and an
adjacency matrix of upper bounds
}
\details{
The input adjacency matrices must square n x n matrices with the same dimensions.
The input can be either matrix, data.table, tibble, or data.table type objects,
but the output will always be a data.frame. This is for output readability.
data.table and tibble objects work logically, but their outputs require
additional steps to parse from the user's perspective.

If the input matrices have named columns, those names will be carried over
in the grey adjacency matrix. Otherwise, generic node IDs will be used
(C1, C2, ... Cn).
}
\examples{
make_adj_matrix_w_ivfns(
  lower = matrix(data = c(0, 0.2, 0, 0.5), nrow = 2, ncol = 2),
  upper = matrix(data = c(0, 0.4, 0, 0.7), nrow = 2, ncol = 2)
)

lower_adj_matrix <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.4, 0)
)
upper_adj_matrix <- data.frame(
  "A" = c(0, 0),
  "B" = c(0.6, 0)
)
make_adj_matrix_w_ivfns(lower_adj_matrix, upper_adj_matrix)
}
